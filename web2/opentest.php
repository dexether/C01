<?php

//include("html_encoder_1.9.php");
include_once("$_SERVER[DOCUMENT_ROOT]/includes/functions.php");
include_once("$_SERVER[DOCUMENT_ROOT]/classes/Manager.class.php");

include_once("includes/wr_tools.php");
$lines = "a=1";

//tradelog("B_Open_Position_Report2-93=".$accounts[0]);
$template->assign("accounts", $accounts);
$template->assign("user", $user);

//tradelog("B_Open_Position_Report2-97:".$_POST[dateselect]);
if ($_POST[rolldateto] != '') {
    $datesearch = anti_injection($_POST[rolldateto]);
}

$template->assign("datesearch", $datesearch);
//tradeLog("B_Order_Report_2-123;query_account:" . $query_account);


if ($datesearch == 'Today') {
        $statements = fetch_TempStatement($mysql[meta], $mysql[database], $query_account, $tools, $crypt_key, $accountkey, $thecounter);
    } else {
        $statements = fetch_DailyStatement($datesearch, $mysql[meta], $mysql[database], $query_account, $tools, $crypt_key, $accountkey, $thecounter);
    }
    $template->assign("GabTotPL", $GabTotPL);

    $template->assign("statements", $statements);
    $template->assign("statements_closing", $statements_closing);
mysql_free_result($result);
$template->display("b_open_position_report2.htm");


/* * ***************************************************************************
 * FUNCTIONS                                                                   *
 * *************************************************************************** */

function fetch_DailyStatement($datesearch, $mysql_meta, $mysql_database, $query_account, $tools, $crypt_key, $accountkey, $thecounter) {
    //tradelog("B_Open_Position_Report2-171:" . $datesearch.";".$query_account);
    global $DB;
    global $GabTotPL;

    $query = "SELECT * FROM " . $mysql_meta . ".mt4_trades 
    WHERE cmd IN ('0','1') and login $query_account   
        AND 
    (
        (LEFT(CLOSE_TIME,10) > '" . $datesearch . "' AND LEFT(OPEN_TIME,10) <= '" . $datesearch . "')
        OR 
        CLOSE_TIME ='1970-01-01 00:00:00'
    ) 
    ORDER BY TICKET DESC;";
    //tradelog("B_Open_Position_Report2-202-query:" . $query);
    $result = $DB->query($query);
    while ($row = $DB->fetch_array($result)) {
        $row[Unit] = $row[VOLUME] / 100;
        if ($row[CMD] == '0') {
            $row[BuyPrice] = $row[OPEN_PRICE];
            $row[SellPrice] = '';
        } else {
            $row[BuyPrice] = '';
            $row[SellPrice] = $row[OPEN_PRICE];
        }
        $symbols_array[] = $row[SYMBOL];
        $positions[] = $row;
    }

    for ($i_symbol = 0; $i_symbol < count($symbols_array); $i_symbol++) {
        $symbol = $symbols_array[$i_symbol];
        $query_symbol = $query_symbol . ",'" . $symbol . "'";
    }

    $query = "SELECT * FROM day_end_counter 
        WHERE rolldate='$datesearch' and counter in (''" . $query_symbol . ")
            ORDER BY counter ASC";
    //tradelog("B_Open_Position_Report2-225-query=" . $query);
    $result = $DB->query($query);
    while ($row = $DB->fetch_array($result)) {
        $rendah[$row[counter]] = $row[bid];
        $tinggi[$row[counter]] = $row[ask];
    }
    $query = "SELECT lotsize,counter FROM counter_com WHERE counter in (''" . $query_symbol . ")";
    $result = $DB->query($query);
    while ($row = $DB->fetch_array($result)) {
        $lotsize[$row[counter]] = $row[lotsize];
    }


    if (count($positions) > 0) {
        $positions = array_reverse($positions);
        foreach ($positions AS $row) {
            while (list($key, $val) = each($row)) {
                $row[$key] = trim($val);
            }
            $counter_decimal = $row[DIGITS] + 1;
            $statement[$row[SYMBOL]][counter_decimal] = $counter_decimal;
            if ($row[CMD] == '0') {
                $row[CurrentPrice] = $rendah[$row[SYMBOL]];
                //tradelog("mt4_daily_statement-330-Price:" . $row[CLOSE_PRICE]);
            } else {
                $row[CurrentPrice] = $tinggi[$row[SYMBOL]];
                //tradelog("mt4_daily_statement-333-Price:" . $row[CLOSE_PRICE]);
            }
            if ($row[CMD] == '0') {
                $row[Floating] = ($row[CurrentPrice] - $row[BuyPrice]) * $row[Unit] * $lotsize[$row[SYMBOL]];
                //tradelog("mt4_daily_statement-341-Lotsize:" . $lotsize[$row[SYMBOL]]);
                if (preg_match("/(^USD\/.+|^U(J|C)\d)/", $row[ItemCode])) {
                    $row[Floating] = $row[Floating] / $row[CurrentPrice];
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/GBP") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'GBP A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] * $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/CHF") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'CHF A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/JPY" || substr($row[ItemCode], 0, 7) == "EURJPY2") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'JPY A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "GBP/JPY") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'JPY A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                $statement[$row[SYMBOL]][BuyUnit] = $statement[$row[SYMBOL]][BuyUnit] + $row[Unit];
                $statement[$row[SYMBOL]][BuyTotPriceOpen] = $statement[$row[SYMBOL]][BuyTotPriceOpen] + $row[Unit] * $row[BuyPrice];
                $statement[$row[SYMBOL]][BuyTotPriceClose] = $statement[$row[SYMBOL]][BuyTotPriceClose] + $row[Unit] * $row[CurrentPrice];
            } else {
                $row[Floating] = ($row[SellPrice] - $row[CurrentPrice]) * $row[Unit] * $lotsize[$row[SYMBOL]];
                if (preg_match("/(^USD\/.+|^U(J|C)\d)/", $row[ItemCode])) {
                    $row[Floating] = $row[Floating] / $row[CurrentPrice];
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/GBP") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'GBP A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] * $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/CHF") {
                    //tradelog("tempstatement Sell New-".$row[ItemCode]);
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'CHF A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "EUR/JPY" || substr($row[ItemCode], 0, 7) == "EURJPY2") {
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'JPY A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                if (substr($row[ItemCode], 0, 7) == "GBP/JPY") {
                    //tradelog("tempstatement Sell New-".$row[ItemCode]);
                    global $DB_quote;
                    $query = "SELECT quote.last FROM $DB_quote->db.quote WHERE quote.symbol = 'JPY A0-FX'";
                    $result = $DB_quote->query($query);
                    $row_quote = mysql_fetch_array($result);
                    $lastclosing = $row_quote[last];
                    unset($row_quote);
                    include("includes/globals.php");
                    $row[Floating] = $row[Floating] / $lastclosing;
                }
                $statement[$row[SYMBOL]][SellUnit] = $statement[$row[SYMBOL]][SellUnit] + $row[Unit];
                $statement[$row[SYMBOL]][SellTotPriceOpen] = $statement[$row[SYMBOL]][SellTotPriceOpen] + $row[Unit] * $row[SellPrice];
                $statement[$row[SYMBOL]][SellTotPriceClose] = $statement[$row[SYMBOL]][SellTotPriceClose] + $row[Unit] * $row[CurrentPrice];
            }
        }
    }
    foreach ($statement AS $theItemCode => $theItemCodeArray) {
        //tradeLog("B_Open_position_report2-256=" . $theItemCode);
        if ($statement[$theItemCode][BuyUnit] > 0) {
            $statement[$theItemCode][BuyAVGPriceOpen] = $statement[$theItemCode][BuyTotPriceOpen] / $statement[$theItemCode][BuyUnit];
            //tradelog("B_Open_Position_Report2-357:" . $statement[$theItemCode][BuyAVGPriceOpen].";BuyTotPriceOpen:".$statement[$theItemCode][BuyTotPriceOpen].";Un1it:".$statement[$theItemCode][BuyUnit]);
            $statement[$theItemCode][BuyAVGPriceClose] = $statement[$theItemCode][BuyTotPriceClose] / $statement[$theItemCode][BuyUnit];
            $statement[$theItemCode][BuyPoint] = $statement[$theItemCode][BuyAVGPriceClose] - $statement[$theItemCode][BuyAVGPriceOpen];
            $statement[$theItemCode][BuyMoney] = $statement[$theItemCode][BuyUnit] * $statement[$theItemCode][BuyPoint];
        } else {
            0;
        }
        if ($statement[$theItemCode][SellUnit] > 0) {
            $statement[$theItemCode][SellAVGPriceOpen] = $statement[$theItemCode][SellTotPriceOpen] / $statement[$theItemCode][SellUnit];
            $statement[$theItemCode][SellAVGPriceClose] = $statement[$theItemCode][SellTotPriceClose] / $statement[$theItemCode][SellUnit];
            $statement[$theItemCode][SellPoint] = $statement[$theItemCode][SellAVGPriceOpen] - $statement[$theItemCode][SellAVGPriceClose];
            $statement[$theItemCode][SellMoney] = $statement[$theItemCode][SellUnit] * $statement[$theItemCode][SellPoint];
        } else {
            0;
        }
        $statement[$theItemCode][TotBuySellQty] = $statement[$theItemCode][BuyUnit] - $statement[$theItemCode][SellUnit];
        $statement[$theItemCode][TotBuySellMoney] = $statement[$theItemCode][BuyMoney] + $statement[$theItemCode][SellMoney];


        if (preg_match("/(^USD.+|^U(JPY|CHF)\d)/", $theItemCode) || preg_match("/(^USD\/.+|^U(JPY|CHF)\d)/", $theItemCode)) {
            $LiquidPrice = 1;
            if ($statement[$theItemCode][BuyAVGPriceClose] > 0) {
                if ($statement[$theItemCode][SellAVGPriceClose] > 0) {
                    $LiquidPrice = ($statement[$theItemCode][BuyAVGPriceClose] + $statement[$theItemCode][SellAVGPriceClose]) / 2;
                } else {
                    $LiquidPrice = $statement[$theItemCode][BuyAVGPriceClose];
                }
            } else {
                if ($statement[$theItemCode][SellAVGPriceClose] > 0) {
                    //if ($theItemCode == 'USDJPY!') {
                    //    tradeLog("B_Open_position_report2-400:=" . $statement[$theItemCode][SellAVGPriceClose]);
                    //}
                    $LiquidPrice = $statement[$theItemCode][SellAVGPriceClose];
                }
            }

            //if ($theItemCode == 'USDJPY!') {
            //    tradeLog("B_Open_position_report2-405:=" . $statement[$theItemCode][TotBuySellMoney]);
            //}

            $statement[$theItemCode][TotPL] = $statement[$theItemCode][TotBuySellMoney] * $thecounter[$theItemCode] / $LiquidPrice;
            //if ($theItemCode == 'USDJPY!') {
            //    tradeLog("B_Open_position_report2-410:=" . $LiquidPrice);
            //}
        } else {
            $statement[$theItemCode][TotPL] = $statement[$theItemCode][TotBuySellMoney] * $thecounter[$theItemCode];
        }

        $GabTotPL = $GabTotPL + $statement[$theItemCode][TotPL];

        $accountkey2 = $accountkey . "&queryacct=" . $query_account;
        $accountkey2 = $accountkey2 . "&productopen=" . $theItemCode;
        $accountkey2 = $accountkey2 . "&rolldateto=" . $datesearch;
        $linezip = gzcompress($accountkey2);
        $key = str_replace(array('+', '/'), array('123', ','), rtrim(base64_encode($tools->Crypt($linezip, $crypt_key)), '='));
        $statement[$theItemCode][key] = $key;
    }
    return $statement;
}

function fetch_TempStatement($mysql_meta, $mysql_database, $query_account, $tools, $crypt_key, $accountkey, $thecounter) {
    //tradelog("B_Open_Position_Report2-171:" . $datesearch.";".$query_account);
    global $DB;
    global $GabTotPL;
    $prices = fetchPrices_history($datesearch);
    $query = "SELECT mt4_trades.* 
        FROM " . $mysql_meta . ".mt4_trades 
        WHERE login $query_account 
        AND CMD IN ('0','1') 
        AND CLOSE_TIME ='1970-01-01 00:00:00'";
    //tradelog("B_Open_Position_Report2-299-" . $query);
    $result = $DB->query($query);
    while ($row = $DB->fetch_array($result)) {
        $positions[] = $row;
    }
    if (count($positions) > 0) {
        $positions = array_reverse($positions);
        foreach ($positions AS $row) {
            while (list($key, $val) = each($row)) {
                $row[$key] = trim($val);
            }
            $counter_decimal = $row[DIGITS] + 1;
            $row[Commission] = number_format($row[COMMISSION], 2, ".", "");
            $row[FLCOMM] = number_format($row[COMMISSION], 2, ".", "");
            $row[PL] = number_format($row[PROFIT], 2, ".", "");
            $statement[$row[SYMBOL]][counter_decimal] = $counter_decimal;
            $row[Unit] = $row[VOLUME] / 100;
            if ($row[CMD] == '0') {
                $row[BuyPrice] = number_format($row[OPEN_PRICE], $counter_decimal, ".", "");
                $row[BuyDisplayDate] = substr($row[OPEN_TIME], 6, 2) . "/" . substr($row[OPEN_TIME], 4, 2) . "/" . substr($row[OPEN_TIME], 0, 4);

                $row[CurrentPrice] = $row[CLOSE_PRICE];
                $row[Floating] = $row[PROFIT];
                $TotalFloating += $row[Floating] + $row[FLCOMM];
                $statement[$row[SYMBOL]][BuyUnit] = $statement[$row[SYMBOL]][BuyUnit] + $row[Unit];
                $statement[$row[SYMBOL]][BuyTotPriceOpen] = $statement[$row[SYMBOL]][BuyTotPriceOpen] + $row[Unit] * $row[BuyPrice];
                $statement[$row[SYMBOL]][BuyTotPriceClose] = $statement[$row[SYMBOL]][BuyTotPriceClose] + $row[Unit] * $row[CurrentPrice];
                
                } else {
                $row[SellPrice] = number_format($row[OPEN_PRICE], $counter_decimal, ".", "");
                $row[SellDisplayDate] = substr($row[OPEN_TIME], 6, 2) . "/" . substr($row[OPEN_TIME], 4, 2) . "/" . substr($row[OPEN_TIME], 0, 4);

                $row[CurrentPrice] = $row[CLOSE_PRICE];
                $row[Floating] = $row[PROFIT];
                $TotalFloating += $row[Floating] + $row[FLCOMM];
                $statement[$row[SYMBOL]][SellUnit] = $statement[$row[SYMBOL]][SellUnit] + $row[Unit];
                $statement[$row[SYMBOL]][SellTotPriceOpen] = $statement[$row[SYMBOL]][SellTotPriceOpen] + $row[Unit] * $row[SellPrice];
                $statement[$row[SYMBOL]][SellTotPriceClose] = $statement[$row[SYMBOL]][SellTotPriceClose] + $row[Unit] * $row[CurrentPrice];
                //if ($row[SYMBOL] == 'USDJPY!') {
                    //tradelog("B_Open_Position_Report2-465:" . $statement[$row[SYMBOL]][SellUnit] . ";" . $statement[$row[SYMBOL]][SellTotPriceClose]);
                //}
            }
        }
    }
    foreach ($statement AS $theItemCode => $theItemCodeArray) {
        //if ($theItemCode == 'USDJPY!') {
        //tradeLog("B_Open_position_report2-359=" . $theItemCode);
        //}
        if ($statement[$theItemCode][BuyUnit] > 0) {
            $statement[$theItemCode][BuyAVGPriceOpen] = $statement[$theItemCode][BuyTotPriceOpen] / $statement[$theItemCode][BuyUnit];
            //tradelog("B_Open_Position_Report2-454:" . $statement[$theItemCode][BuyAVGPriceOpen].";BuyTotPriceOpen:".$statement[$theItemCode][BuyTotPriceOpen].";Un1it:".$statement[$theItemCode][BuyUnit]);
            $statement[$theItemCode][BuyAVGPriceClose] = $statement[$theItemCode][BuyTotPriceClose] / $statement[$theItemCode][BuyUnit];
            $statement[$theItemCode][BuyPoint] = $statement[$theItemCode][BuyAVGPriceClose] - $statement[$theItemCode][BuyAVGPriceOpen];
            $statement[$theItemCode][BuyMoney] = $statement[$theItemCode][BuyUnit] * $statement[$theItemCode][BuyPoint];
        } else {
            0;
        }
        if ($statement[$theItemCode][SellUnit] > 0) {
            $statement[$theItemCode][SellAVGPriceOpen] = $statement[$theItemCode][SellTotPriceOpen] / $statement[$theItemCode][SellUnit];
            $statement[$theItemCode][SellAVGPriceClose] = $statement[$theItemCode][SellTotPriceClose] / $statement[$theItemCode][SellUnit];
            //if ($theItemCode == 'USDJPY!') {
            //    tradelog("B_Open_Position_Report2-373:" . $statement[$theItemCode][SellAVGPriceClose]);
            //}
            $statement[$theItemCode][SellPoint] = $statement[$theItemCode][SellAVGPriceOpen] - $statement[$theItemCode][SellAVGPriceClose];
            $statement[$theItemCode][SellMoney] = $statement[$theItemCode][SellUnit] * $statement[$theItemCode][SellPoint];
        } else {
            0;
        }
        $statement[$theItemCode][TotBuySellQty] = $statement[$theItemCode][BuyUnit] - $statement[$theItemCode][SellUnit];
        $statement[$theItemCode][TotBuySellMoney] = $statement[$theItemCode][BuyMoney] + $statement[$theItemCode][SellMoney];

        //if ($theItemCode == 'USDJPY!') {
        //tradeLog("B_Open_position_report2-384-Counter:" . $theItemCode);
        //}
        if (preg_match("/(^USD.+|^U(JPY|CHF)\d)/", $theItemCode) || preg_match("/(^USD\/.+|^U(JPY|CHF)\d)/", $theItemCode)) {
            $LiquidPrice = 1;
            if ($statement[$theItemCode][BuyAVGPriceClose] > 0) {
                if ($statement[$theItemCode][SellAVGPriceClose] > 0) {
                    $LiquidPrice = ($statement[$theItemCode][BuyAVGPriceClose] + $statement[$theItemCode][SellAVGPriceClose]) / 2;
                } else {
                    $LiquidPrice = $statement[$theItemCode][BuyAVGPriceClose];
                }
            } else {
                if ($statement[$theItemCode][SellAVGPriceClose] > 0) {
                    //if ($theItemCode == 'USDJPY!') {
                    //    tradeLog("B_Open_position_report2-400:=" . $statement[$theItemCode][SellAVGPriceClose]);
                    //}
                    $LiquidPrice = $statement[$theItemCode][SellAVGPriceClose];
                }
            }

            //if ($theItemCode == 'USDJPY!') {
            //    tradeLog("B_Open_position_report2-405:=" . $statement[$theItemCode][TotBuySellMoney]);
            //}

            $statement[$theItemCode][TotPL] = $statement[$theItemCode][TotBuySellMoney] * $thecounter[$theItemCode] / $LiquidPrice;
            //if ($theItemCode == 'USDJPY!') {
            //    tradeLog("B_Open_position_report2-410:=" . $LiquidPrice);
            //}
        } else {
            $statement[$theItemCode][TotPL] = $statement[$theItemCode][TotBuySellMoney] * $thecounter[$theItemCode];
        }

        $GabTotPL = $GabTotPL + $statement[$theItemCode][TotPL];

        $accountkey2 = $accountkey . "&queryacct=" . $query_account;
        $accountkey2 = $accountkey2 . "&productopen=" . $theItemCode;
        $accountkey2 = $accountkey2 . "&rolldateto=Today";
        //tradeLog("B_Open_position_report2-364:=" . $accountkey);
        $linezip = gzcompress($accountkey2);
        $key = str_replace(array('+', '/'), array('123', ','), rtrim(base64_encode($tools->Crypt($linezip, $crypt_key)), '='));
        $statement[$theItemCode][key] = $key;
    }
    return $statement;
}

function fetchAccounts($username, $isadmin = 0) {
    global $DB_odbc;
    global $user;

    if ($isadmin) {
        $query = "SELECT trim(accountname) AS account FROM client_accounts where accountname !='' ORDER BY accountname asc";
        $result = $DB_odbc->query($query);
        while ($row = $DB_odbc->fetch_array($result)) {
            $accounts[] = $row[account];
        }
    } else {
        if ($user->groupid == '1') {
            $query = "SELECT trim(AccNo) AS account FROM bafile WHERE " . $user->tradingtype . "='$username' ORDER BY AccNo";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }
        if ($user->groupid == '2') {
            $query = "SELECT trim(AccNo) AS account FROM bafile WHERE AccNo='$username' ORDER BY AccNo";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }
        if ($user->groupid == '3') {
            $query = "SELECT TRIM(client_accounts.accountname) AS account 
                FROM client_accounts,client_aecode  
                WHERE client_accounts.accountname !='' 
                AND client_accounts.aecodeid = client_aecode.aecodeid 
                AND client_aecode.aecode = (
                    SELECT userfield.fieldvalue FROM userfield,USER 
                    WHERE user.userid = userfield.`userid` 
                    AND user.`username` = '" . $username . "' 
                    AND fieldname = 'aecode' 
                ) 
                ORDER BY client_accounts.accountname ASC";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }

        if ($user->groupid == '4' || $user->groupid == '5') {
            $query = "SELECT trim(AccNo) AS account FROM bafile WHERE AeCode='$user->userfield_aecode' ORDER BY AccNo";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }
        if ($user->groupid == '6') {
            $query = "
                SELECT TRIM(bafile.AccNo) AS account 
                FROM bafile,client_branch 
                WHERE bafile.AccNo !='' 
                AND bafile.`Branch` = client_branch.`branch` 
                AND client_branch.branch = ( 
                        SELECT userfield.fieldvalue 
                        FROM userfield,USER WHERE user.userid = userfield.`userid` 
                        AND user.`username` = '" . $username . "' 
                        AND fieldname = 'branch' 
                ) 
                GROUP BY TRIM(bafile.AccNo) 
                ORDER BY bafile.AccNo ASC
                ";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }
        if ($user->groupid == '7' || $user->groupid == '8' || $user->groupid == '11') {
            $manager = new Manager($user->getUserid());
            $manager->fetchBrancheGroups($DB_odbc);
            $accounts = $manager->getAccounts();
        }
        if ($user->groupid == '12') {
            $query = "
                SELECT TRIM(bafile.AccNo) AS account 
                FROM bafile,client_group 
                WHERE bafile.AccNo !='' 
                AND bafile.group = client_group.`group`  
                AND client_group.group = ( 
                        SELECT userfield.fieldvalue 
                        FROM userfield,USER WHERE user.userid = userfield.`userid` 
                        AND user.`username` = '" . $username . "' 
                        AND fieldname = 'group' 
                ) 
                GROUP BY TRIM(bafile.AccNo) 
                ORDER BY bafile.AccNo ASC
                ";
            $result = $DB_odbc->query($query);
            while ($row = $DB_odbc->fetch_array($result)) {
                $accounts[] = $row[account];
            }
        }
    }
    if ($accounts[0] == '') {
        $accounts[0] = 'dummy';
    }
    return $accounts;
}

function tradeLog($msg) {
    $fp = fopen("trader.log", "a");
    $logdate = date("Y-m-d H:i:s => ");
    $msg = preg_replace("/\s+/", " ", $msg);
    fwrite($fp, $logdate . $msg . "\n");
    fclose($fp);
    return;
}

?>